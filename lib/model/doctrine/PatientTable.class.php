<?php

/**
 * PatientTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PatientTable extends DoctrineTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object PatientTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Patient');
    }
  const
    STATUS_ACTIVE       = 1,
    STATUS_INACTIVE     = 0;
    
  protected static
    $status                = array
                             (
                               self::STATUS_ACTIVE     => 'Si'  ,
                               self::STATUS_INACTIVE   => 'No',
                             );
                             
  public function getStatuss()
  {
    return self::$status;
  }	

  const
    GENDER_MALE       = 1,
    GENDER_FAME     = 0;
    
  protected static
    $gender                = array
                             (
                               self::GENDER_MALE   => 'Masculino',
                               self::GENDER_FAME   => 'Femenino' ,
                             );
                             
  public function getGenders()
  {
    return self::$gender;
  }

  
  const
    TYPE_TITULAR  = 1,
    TYPE_WIFE     = 2,
    TYPE_SONS     = 3;
    
  protected static
    $types                = array
                             (
                               self::TYPE_TITULAR   => 'Titular',
                               self::TYPE_WIFE   => 'Conyuge'   ,
                               self::TYPE_SONS   => 'Hijo/Hija' ,
                             );
                             
  public function getTypes()
  {
    return self::$types;
  }
  
  public function findByNameLike($name, $limit = 20)
  {
    $q = $this->createAliasQuery('p')

         ->where('LOWER(p.firstname) LIKE ?', '%'.Stringkit::strtolower($name).'%')
          ->orwhere('LOWER(p.lastname) LIKE ?', '%'.Stringkit::strtolower($name).'%')
         ->limit($limit);
    
    return $q->execute();
  }    
  
  
  
}