<?php

/**
 * BasePatientMedicalHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $patient_id
 * @property integer $medical_history_id
 * @property Patient $Patient
 * @property MedicalHistory $MedicalHistory
 * 
 * @method integer               getPatientId()          Returns the current record's "patient_id" value
 * @method integer               getMedicalHistoryId()   Returns the current record's "medical_history_id" value
 * @method Patient               getPatient()            Returns the current record's "Patient" value
 * @method MedicalHistory        getMedicalHistory()     Returns the current record's "MedicalHistory" value
 * @method PatientMedicalHistory setPatientId()          Sets the current record's "patient_id" value
 * @method PatientMedicalHistory setMedicalHistoryId()   Sets the current record's "medical_history_id" value
 * @method PatientMedicalHistory setPatient()            Sets the current record's "Patient" value
 * @method PatientMedicalHistory setMedicalHistory()     Sets the current record's "MedicalHistory" value
 * 
 * @package    romident
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePatientMedicalHistory extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_patient_medical_history');
        $this->hasColumn('patient_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));
        $this->hasColumn('medical_history_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));


        $this->index('i_created_at', array(
             'fields' => 'created_at',
             ));
        $this->index('i_updated_at', array(
             'fields' => 'updated_at',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Patient', array(
             'local' => 'patient_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('MedicalHistory', array(
             'local' => 'medical_history_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}